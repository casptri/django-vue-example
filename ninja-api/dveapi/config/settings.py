"""
Django settings for dlApi project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import datetime
import os
import socket

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-+n=ioo9140nbqt11q))boj7-6vs!3)1r=)=1#qic_6^kz3qswu"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["0.0.0.0", "*", "localhost"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    'corsheaders',
    'ninja_extra',
    'ninja_jwt',
    'fileManager',
    'playground',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

CORS_ALLOW_ALL_ORIGINS = True
ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

db_name = os.environ.get("DJANGO_DB_NAME")
db_user = os.environ.get("DJANGO_DB_USER")
db_password = os.environ.get("DJANGO_DB_PASSWORD")
db_host = os.environ.get("DJANGO_DB_HOST")

if not db_name:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": db_name,
            "USER": db_user,
            "PASSWORD": db_password,
            "HOST": db_host,
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
DEFAULT_STATIC_ROOT = None
STATIC_ROOT = os.environ.get("DJANGO_STATIC_ROOT", DEFAULT_STATIC_ROOT)
STATIC_HOSTNAME = os.environ.get("DJANGO_STATIC_HOSTNAME")
STATIC_PORT = os.environ.get("DJANGO_STATIC_PORT","80")

if STATIC_HOSTNAME:
    static_ip = socket.gethostbyname(STATIC_HOSTNAME)
    STATIC_URL = f"http://{static_ip}:{STATIC_PORT}/static/"
else:
    DEFAULT_STATIC_URL = 'static/'
    STATIC_URL = os.environ.get("DJANGO_STATIC_URL", DEFAULT_STATIC_URL)

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

FILEMANAGER_BASEPATH = os.environ.get("DJANGO_STORAGE_PATH","obj")

NINJA_JWT = {
    "AUTH_TOKEN_CLASSES": ("ninja_jwt.tokens.AccessToken",),
    'ACCESS_TOKEN_LIFETIME' : datetime.timedelta(days=100),
    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=1000),
    'UPDATE_LAST_LOGIN': True,

}
